{
  "swagger": "2.0",
  "info": {
    "title": "sso.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Auth"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/sso/login": {
      "get": {
        "summary": "Login logs in a user and returns an auth and refresh token.",
        "operationId": "Auth_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "email",
            "description": "Email of the user to login.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "description": "Password of the user to login.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/sso/logout": {
      "get": {
        "summary": "Logout revokes current user's access and refresh tokens",
        "operationId": "Auth_Logout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authLogoutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "token",
            "description": "Auth token of the user to logout.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/sso/refresh": {
      "get": {
        "summary": "Refresh renews access and refresh tokens",
        "operationId": "Auth_Refresh",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authRefreshResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "refreshToken",
            "description": "Refresh token of the logged in user.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/sso/register": {
      "get": {
        "summary": "Register registers a new user.",
        "operationId": "Auth_Register",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authRegisterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "email",
            "description": "Email of the user to register.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "description": "Password of the user to register.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/sso/validate": {
      "get": {
        "summary": "Validate validates access token",
        "operationId": "Auth_Validate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authValidateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "token",
            "description": "token of the user to validate.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    }
  },
  "definitions": {
    "authIsAdminResponse": {
      "type": "object",
      "properties": {
        "isAdmin": {
          "type": "boolean",
          "description": "Indicates whether the user is an admin."
        }
      }
    },
    "authLoginResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "description": "Access token of the logged in user."
        },
        "refreshToken": {
          "type": "string",
          "description": "Refresh token of the logged in user."
        }
      }
    },
    "authLogoutResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "Indicates whether the logout was successful."
        }
      }
    },
    "authRefreshResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "description": "Access token of the logged in user."
        },
        "refreshToken": {
          "type": "string",
          "description": "Refresh token of the logged in user."
        }
      }
    },
    "authRegisterResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "int64",
          "description": "User ID of the registered user."
        }
      }
    },
    "authValidateResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "Indicates whether the token is correct."
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
